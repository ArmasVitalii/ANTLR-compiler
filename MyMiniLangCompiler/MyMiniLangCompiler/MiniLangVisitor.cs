//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from f:/UniTBv/LFC/RepoCommpilator/MyMiniLangCompiler/MyMiniLangCompiler/MiniLang.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MiniLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IMiniLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MiniLangParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.structDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructDecl([NotNull] MiniLangParser.StructDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.structBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructBody([NotNull] MiniLangParser.StructBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.structFieldDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStructFieldDecl([NotNull] MiniLangParser.StructFieldDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.globalVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVarDecl([NotNull] MiniLangParser.GlobalVarDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.functionDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecl([NotNull] MiniLangParser.FunctionDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] MiniLangParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.paramDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamDecl([NotNull] MiniLangParser.ParamDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] MiniLangParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MiniLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MiniLangParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] MiniLangParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.localVarDecl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLocalVarDecl([NotNull] MiniLangParser.LocalVarDeclContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MiniLangParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MiniLangParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] MiniLangParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MiniLangParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.logicalOrExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpr([NotNull] MiniLangParser.LogicalOrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.logicalAndExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpr([NotNull] MiniLangParser.LogicalAndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.equalityExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpr([NotNull] MiniLangParser.EqualityExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.relationalExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpr([NotNull] MiniLangParser.RelationalExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.additiveExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] MiniLangParser.AdditiveExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.multiplicativeExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpr([NotNull] MiniLangParser.MultiplicativeExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.unaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpr([NotNull] MiniLangParser.UnaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.primaryExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpr([NotNull] MiniLangParser.PrimaryExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] MiniLangParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgumentList([NotNull] MiniLangParser.ArgumentListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="MiniLangParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MiniLangParser.TypeContext context);
}
